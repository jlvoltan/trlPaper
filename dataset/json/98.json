{
    "id": 98,
    "titulo": "fft otimizada com decomposição split-radix-2/4: aplicação em gps e sar",
    "autor": "naiallen carolyne rodrigues lima carvalho, cynthia junqueira e adilson chinatto",
    "url": "https://www.sige.ita.br/edicoes-anteriores/2016/st/ST_06_2.pdf",
    "tipo_documento": "Artigo de Simpósio",
    "rotulo": 1,
    "resumo": "A Transformada Rápida de Fourier (FFT) é uma importante ferramenta para processamento de sinais, por isso diversos algoritmos foram desenvolvidos com o objetivo de melhorar seu desempenho. Neste trabalho é apresentada a comparação entre o algoritmo clássico Radix-2 e o Split-Radix-2/4 aplicados a dados complexos e as versões desses algoritmos aplicadas a dados reais, cuja complexidade é reduzida pela remoção de redundâncias. Para testar esses algoritmos foram utilizados dados reais de sinal GPS, em que a FFT é utilizada na correlação do sinal, e imagens complexas SAR brutas, neste caso a FFT é utilizada para fazer compressão de dados e obter imagens processadas. Verificou-se melhorias em tempo de processamento entre as estruturas abordadas da ordem de 40% ou maior, quando aplicadas a processos relacionados a áreas tecnológicas importantes aos sistemas de defesa tais como os processamentos GPS e SAR.",
    "texto": " I. INTRODUÇÃO A Transformada Discreta de Fourier (DFT - Discrete Fourier Transform) é um importante processo matemático presente em um amplo espectro de aplicações. Como exemplo, pode-se citar o seu uso em telecomunicações, em que é parte constituinte de sistemas OFDM (Orthogonal Frequency Division Multiplex) [1] e pode ser empregada em algoritmos de estimação de fase e frequência em sistemas ópticos coerentes [2]; em sistemas radar, notadamente em SAR (Synthetic Aperture Radar), é empregada para realizar a compressão de dados [3], aplicação similar àquelas encontradas em sistemas de estimação geofísica [4]; em sistemas de geoposicionamento como no GNSS (Global Navigation Satellite System), faz parte dos algoritmos destinados ao cálculo da correlação circular cruzada de códigos de espalhamento espectral [5]; finalmente, pode ser encontrada em analisadores de sinais, onde é empregada para estimação e cálculo do espectro de um determinado sinal de entrada, principalmente em situações em que as frequências são baixas [6]. O mais importante passo na otimização do cálculo da DFT foi dado por Cooley e Tukey [7], que desenvolveram o clássico algoritmo batizado de Transformada Rápida de Fourier (FFT - Fast Fourier Transform), cuja grande vantagem é apresentar complexidade O(NlogN) face à complexidade O(N²) da DFT, com a restrição de que o número de amostras N do conjunto de dados analisado tem que ser potência de dois, ou seja, N = 2n. Esse algoritmo é baseado em decomposições recursivas e a menor porção da decomposição é chamada de radix- 2 [8]. Porém, é possível a aplicação de vários tipos de decomposições, levando à radix-m, em que N = mn, e mesmo a decomposições mistas chamadas de split-radix. Tem-se demonstrado que o uso desses outros tipos de decomposição comumente leva a ganhos em termos de performance computacional [9], embora possam limitar a flexibilidade do tamanho do conjunto de dados. Neste trabalho são apresentadas otimizações ao cálculo da DFT, em que os conjuntos de dados a serem processados são provenientes de duas importantes aplicações em sistemas de defesa: Aquisição GPS (Global Position System) e processamento de imagem SAR (Synthetic Aperture Radar) bruta. Para essas duas aplicações a complexidade computacional da FFT é reduzida ao uso de técnicas do tipo split-radix, levando a ganho de desempenho e consequentemente redução de tempo de cálculo, obtendo algoritmos mais eficientes, tendo em vista sua aplicação em sistemas embarcados. O artigo está estruturado da seguinte forma: na seção II são apresentados os algoritmos FFT abordados neste trabalho, na seção III são abordados os tipos de dados, na seção IV são mostrados os resultados e por fim na V são feitas as considerações finais. II. ALGORITMOS FFT Como citado anteriormente, a FFT é um algoritmo usado para calcular a DFT de forma eficiente. Esse algoritmo decompõe o conjunto de dados de entrada em subconjuntos de dados menores [8], sendo um típico algoritmo do tipo dividir para conquistar. Existem diversos algoritmos para computar a DFT e embora todos os que utilizem radix tenham a mesma complexidade, seus desempenhos dependem do comprimento da sequência de entrada e de como é realizada a decomposição desse conjunto de dados. A estrutura mais simples e conhecida é o radix-2, mas existem outras estruturas como o radix-3, radix-4, radix-8, bem como combinações de duas ou mais estruturas como o split-radix-2/4. A decimação dos dados pode ser feita em tempo ou em frequência. Neste trabalho abordamos o radix-2 com decimação em tempo, e o split-radix-2/4 com decimação em frequência. A. Radix-2 O radix-2, proposto por Cooley-Tukey [7], decompõe um conjunto de dados de tamanho N em dois subconjuntos de tamanho N=2. Neste trabalho utilizamos o algoritmo com decimação em tempo, que separa os índices n entre pares e ímpares. Em (1) é definida a DFT e em (2), a decimação em tempo. Em que WN = e^(-i2π/N) e k = 0; 1; 2; ::; N. A estrutura do radix-2 é chamada de butterfly e é mostrada na figura Fig. (1).B. split-radix-2/4 O algoritmo split-radix-2/4, desenvolvido por Duhamel[10], utiliza a decimação em frequência, neste caso o conjunto de dados de tamanho N é dividido diretamente em dois subconjuntos de tamanho N=2. O primeiro subconjunto computa os índices n de 0 a N=2 − 1 e o segundo subconjunto, de N=2 até N − 1. Fazendo a decimação em frequência dos índices em pares e ímpares, tem-se: em que (3) é a definição da DFT e (4) representa a decimação em frequência. Observando (4), vemos que a parte par pode ser computada independentemente da parte ímpar. Aproveitando-se disso, o algoritmo split-radix-2/4 sugere utilizar diferentes métodos para computar cada subconjunto. Nessa metodologia, o subconjunto com índices pares (X(2k)) é computado pelo radix-2 e o subconjunto com índices ímpares (X(2k + 1)) é subdividido mais uma vez, ficando com tamanho N=4, e é computado pelo radix-4. Para os índices ímpares, teremos: A estrutura do split-radix-2/4 é mostrada na figura Fig.(2). C. Dado Real Em muitas aplicações, a sequência de dados que será processada por FFT tem valores reais, como os dados de sinal GPS g utilizados no processo de aquisição e detecção do satélite que os está enviando. Embora os algoritmos FFT sejam concebidos para computar números complexos, este algoritmo pode ser facilmente aplicado a números reais, levando à redução de complexidade quando as redundâncias do algoritmo são removidas. Uma aproximação simples para utilizar o algoritmo FFT com dados do tipo g sem necessidade de ajuste, seria criar uma sequência complexa em que a componente real corresponderia aos elementos de g e a componente imaginária seria 0. Dessa forma, poderíamos aplicar o radix-2 diretamente, no entanto esse método é ineficiente, já que se processaria uma sequência com o dobro do tamanho necessário. A segunda abordagem seria utilizar g como uma sequência complexa com tamanho N=2 em que os índices pares seriam a componente real de g e os índices ímpares, a componente imaginária, em outra palavras, teríamos uma sequência gc(m) = g(2m) + ig(2m + 1), com m = 0; 1; :::; N=2 − 1. Neste caso podemos aplicar o radix-2, mas o resultado (Gc) é relativo a gc. Para encontrar G, relativo à sequência g, é necessário realizar computações adicionais: em que Gr é a parte real de G, Gi é a parte imaginária de G, Gcr é a parte real de Gc, Gci é a parte imaginária de Gc, A(k) e B(k) são coeficientes em função de seno e cosseno e k = 0, 1, ..., N/2 - 1 [7]. Para computar a DFT de g sem manipular sua sequência, usamos o split-radix-2/4, em que as redundâncias são removidas levando em consideração a propriedade de simetria. Para dados reais g, G(k) e G(N − k) são complexos conjugados, ou seja: G(4k + 3) = G(N − (4K + 1)) = G(4K + 1)∗ [10]. Portanto, para a parte par, o algoritmo split-radix-2/4 é computado da mesma maneira que para o dado complexo. Já para parte ímpar, só é necessário computar G(4K + 1). D. Comparação entre o Radix-2 e o Split-Radix-2/4 Os algoritmos FFT têm a vantagem de serem executados in-place, ou seja, não necessitam de vetores auxiliares, e sua execução consiste no uso repetitivo da butterfly. Na Tabela 1 [10] é mostrada uma comparação quantitativa entre o radix-2 e o split-radix-2/4. A vantagem do radix-2 é a simplicidade, disponibilidade de informações e flexibilidade. A complexidade desse algoritmo é O(NlogN) [11]. A vantagem do split-radix-2/4 sobre o radix-2, além da menor quantidade de operações, é que este algoritmo tem a mesma estabilidade do radix-4 e a mesma flexibilidade do radix-2. A complexidade desse algoritmo é O(NlogN) [11]. III. TIPOS DE DADOS Como mencionado, para exemplificar a utilização da FFT com dados complexos e reais, consideramos o processamento de aquisição de sinais GPS (Global Position System) e o processamento de dados brutos SAR (Synthetic Aperture Radar). A. Aquisição do Sinal GPS Os satélites do GNSS, como por exemplo, o americano GPS, enviam continuamente sinais para Terra, os quais possuem basicamente três componentes [4]: 1) Dado de Navegação, que é uma mensagem binária contendo informações das efemérides, por exemplo; 2) PRN (Pseudo-Random Noise) que é um código binário único para cada satélite, responsável pelo espalhamento espectral do sinal, através dele é possível identificar a qual satélite o dado aquisicionado pertence; 3) Portadora, que é uma onda senoidal cuja frequência está na banda L. Os códigos PRN, assim como os Dados de Navegação, correspondem a sequências de valores -1 e +1, chamados de chips e não bits, para enfatizar que eles não carregam informação. A aquisição do sinal GPS tem como objetivo de determinar quais satélites estão visíveis, estimar a frequência Doppler normalizada Fd e o atraso do código PRN. O sinal GPS contém duas componentes em frequência [9] 1) L1 = 1575.42MHz, que contém os códigos C/A (civil) e P(Y) (militar, não disponível); 2) L2 = 1227.6 MHz que contém somente o código P(Y). A equação geral do sinal GPS na banda L1 pode ser descrita como [5]: em que Ap é a amplitude do sinal, γR é o chirp rate ou a variação instantânea de frequência do sinal emitido, Tp é a duração do pulso transmitido e rect hTtp i é a função retangular de amplitude unitária. O sinal recebido pelo radar é chamado de raw data, ou seja, é um dado sem foco e sem compressão. Portanto, o objetivo do processamento desse sinal é gerar uma imagem focada que possa ser usada em processamentos posteriores de classificação, por exemplo. Um dos algoritmos mais conhecidos e simples para essa finalidade é o Processador Narrow Focus, cujo processamento consiste em aplicar a FFT com o objetivo de comprimir os dados em range e azimute. A Fig. 4 mostra o diagrama simplificado deste processador. Os dados utilizados como raw data neste trabalho são uma cena obtida pelo satélite ERS (European Remote Sensing), que pertencem a ESA (European Space Agency), e foram disponibilizadas pelo Centro Aeroespacial Alemão (DLR). O raw data e os parâmetros do sensor estão disponíveis em [13].  IV. RESULTADOS Embora o objetivo principal do trabalho seja comparar a performance dos algoritmos FFT Radix-2 com decimação em tempo e o Split-Radix-2/4, nas subseções a seguir também são mostrados os resultados dos processadores relativos a cada tipo de dado exemplificado neste trabalho. Como os testes realizados visaram a comparação de desempenho entre os algoritmos FFT, é importante fornecer informações sobre a máquina utilizada, a qual possui processador Intel(R) Core(TM) i7, com velocidade de 2.40GHz e sistema operacional Windows 10 (64 bits). A linguagem de programação utilizada foi o C#. A. Aquisição do Sinal GPS Como citado na seção III, o objetivo da aquisição do sinal GPS é determinar quais satélites estão visíveis, para isso é realizada a correlação entre um sinal conhecido e o sinal recebido. O resultado da correlação é um pico que indica a magnitude, o desvio da frequência Doppler e o atraso dos chips. Na Fig. 5 é mostrado o resultado da aquisição de um sinal GPS em que houve autocorrelação e seu deslocamento de chips e frequência. Para esses dados, fez-se a comparação entre o algoritmo radix-2 complexo (criou-se uma sequência complexa em que as componentes reais são os dados do sinal GPS e as imaginárias são preenchidas com zeros), radix-2 real e o split-radix-2/4 real. Na Fig. 6 é mostrada a comparação de tempo, em milissegundos, entre os algoritmos citados. A média de ganho de tempo do radix-2 real sobre o radix-2 complexo foi de aproximadamente 55% e do split-radix-2/4 real sobre o radix- 2 complexo foi de aproximadamente 59%. Para testar o algoritmo de aquisição completo é necessário realizar a correlação dos sinais de 32 satélites. Neste trabalho, utilizou-se 50 bits de dados e 8MHz de frequência de amostragem. Com essa configuração, de cada satélite é adquirido um volume de dados de aproximadamente 1.074.150 amostras. Usando o radix-2 complexo para essa quantidade de amostras multiplicada pela quantidade de satélites, o tempo de execução ficou em torno de 15 minutos, e com o split-radix-2/4 o tempo caiu para aproximadamente 2 minutos. B. Processamento de dados brutos SAR Neste trabalho utilizou-se o algoritmo Narrow Focus para processar o raw data, que possui 2048x2048 amostras. Na Fig. 7 é mostrado o Raw Data e na Fig. 8 é mostrada a imagem processada. É importante lembrar que como estamos trabalhando com imagens, a FFT é bidimensional. No entanto, para o teste de desempenho de dados complexos, utilizou-se os algoritmos FFT de maneira unidimensional. Na Fig. 9 são mostradas as comparações de tempo entre os algoritmos radix-2 e split-radix-2/4, ambos complexos. Assim como para dados reais, o uso do split-radix-2/4 no processamento de imagens SAR leva a um ganho significativo em tempo de processamento, especialmente em situações em que o número de amostras é grande. A média de ganho de tempo do radix-2 real sobre o split-radix-2/4 complexo foi de aproximadamente 43%. Dessa forma, um algoritmo do tipo Narrow Focus utilizando o split-radix-2/4 pode permitir o processamento de uma maior quantidade de imagens em menor tempo, ou ainda permitir que os radares SAR tenham o núcleo de processamento simplificado com redução de consumo energético, dimensão e massa. V. CONCLUSÕES Neste trabalho abordou-se o cálculo de DFT através de estruturas diferentes do tradicional radix-2 complexo. Especificamente, empregou-se a decomposição mista chamada split-radix-2/4. Essa estrutura otimizada foi empregada no cálculo da DFT de dois importantes processos relacionados a várias áreas tecnológicas: processamento GPS e processamento SAR. No caso do processamento GPS, a utilização do split-radix- 2/4 foi somada a simplificações decorrentes da propriedade de simetria do sinal no domínio da frequência quando o sinal no domínio do tempo é real. Nas duas aplicações, foi constatado um ganho de tempo superior a 40%. No caso da aquisição GPS, o ganho em tempo de processamento foi maior que 55% devido às simplificações decorrentes da utilização de apenas dados reais.  ais. A utilização da decomposição split-radix-2/4 permite simplificações de hardware e de software em diversas  aplicações críticas, levando a economia energetica e a diminuição de massa dos equipamentos. Esse tipo de economia  pode ser determinante na aplicação de processos complexos  em sistemas embarcados, por exemplo. Como continuidade natural deste trabalho destaca-se a implementação e análise  de desempenho da FFT com decomposição split-radix-2/4 em processadores DSP e em dispositivos FPGA, além da análise  da influencia da quantatização dos coeficientes em processos  que operam em ponto-fixo. "
}